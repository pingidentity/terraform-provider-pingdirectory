name: Code Check and Acceptance Tests

on:
  pull_request:
    paths:
      - '.github/workflows/code-check-and-tests.yaml'
      - '**.go'
      - 'go.mod'
      - 'go.sum'
      - 'Makefile'
  push:
    branches:
      - "main"

permissions:
  contents: read

jobs:
# Ensure the project can build first
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Get dependencies
        run: |
          go mod tidy
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference after 'go mod tidy'. Run 'go mod tidy' command and commit."; exit 1)
      - name: Build
        run: |
          make install
  fmt:
    name: go fmt
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: |
          if [ "$(go fmt ./... | wc -l)" -gt 0 ]; then
            echo "::error::'go fmt' found required formatting changes. Run 'make fmt' on your branch."
            exit 1;
          fi
  vet:
    name: go vet
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go vet ./...
  lint:
    name: golangcli-lint
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go run github.com/golangci/golangci-lint/cmd/golangci-lint run --timeout 5m ./...
  generate:
    name: go generate
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true
      # Use git add -N . to ensure that new files are listed in the git diff check
      - run: |
          go generate ./...
          git add -N .
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference after code generation. Run 'make generate' command and commit."; exit 1)
  acceptance:
    name: Acceptance Tests
    needs: [fmt, vet, lint, generate]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.2.*'
          terraform_wrapper: false
      - run:
          mkdir -p $HOME/.pingidentity/ && echo "$CONFIG" >> $HOME/.pingidentity/config && make testacccomplete && make removetestcontainer
        env:
          TF_ACC: '1'
          CONFIG: ${{ secrets.Config }}
